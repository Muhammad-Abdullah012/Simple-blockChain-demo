{"version":3,"sources":["heading/heading.js","scroll/scroll.js","blockChain/blockChain.js","homepage/homepage.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["Heading","React","Component","VerticalScrollable","className","this","props","children","HorizontalScrollable","uniqid","require","BlockChain","getHash","obj","h","blockNo","toString","timeStamp","nounce","prevHash","sha256","JSON","stringify","calculateHash","index","block","state","blocks","newHashes","hashes","b","setState","length","isValidHash","hash","i","difficulty","mineHash","isMining","changeBlockNo","v","a","changeNounce","renderCards","map","hashClass","type","defaultValue","onChange","e","target","value","onClick","showBackward","arr","j","makeNewBlock","Date","obj2","concat","componentDidMount","id","Homepage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7caefff6.chunk.js","sourcesContent":["import React from 'react';\r\nclass Heading extends React.Component{\r\n    \r\n    render() {\r\n        return (\r\n            <h1>Blockchain Demo</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Heading;","import React from 'react';\r\nimport './scroll.css';\r\n\r\nexport class VerticalScrollable extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className = \"Scroll-y\">\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class HorizontalScrollable extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className = \"Scroll-x\">\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './blockChain.css';\r\nimport sha256 from 'crypto-js/sha256';\r\nimport {HorizontalScrollable} from '../scroll/scroll'\r\n\r\n//Finally Working!\r\n\r\nconst uniqid = require('uniqid');\r\n\r\nclass BlockChain extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            blocks :[\r\n                {\r\n                    blockNo: 0,\r\n                    nounce: 100,\r\n                    timeStamp: new Date(),\r\n                },\r\n                {\r\n                    blockNo: 1,\r\n                    nounce: 200,\r\n                    timeStamp: new Date(),\r\n                },\r\n                {\r\n                    blockNo: 2,\r\n                    nounce: 1000,\r\n                    timeStamp: new Date(),\r\n                },\r\n                {\r\n                    blockNo: 3,\r\n                    nounce: 10203,\r\n                    timeStamp: new Date(),\r\n                }\r\n            ],\r\n            hashes: [\"0000000000000\"],\r\n            difficulty: 3,\r\n            isMining: false,\r\n        }\r\n    }\r\n\r\n    getHash = (obj) => {\r\n        let h = obj.blockNo.toString() + obj.timeStamp.toString() + obj.nounce.toString() + obj.prevHash;\r\n        return sha256(JSON.stringify(h)).toString();\r\n    }\r\n    \r\n    calculateHash = (index) => {\r\n        let block = this.state.blocks;\r\n        let newHashes = this.state.hashes;\r\n        let b = {\r\n            blockNo: block[index].blockNo,\r\n            timeStamp: block[index].timeStamp,\r\n            nounce: block[index].nounce,\r\n            prevHash: newHashes[index]\r\n        }\r\n        newHashes[index + 1] = this.getHash(b);\r\n        this.setState({hashes: newHashes});\r\n        if(index < this.state.blocks.length - 1) {\r\n            this.calculateHash(index + 1);\r\n        }\r\n    }\r\n\r\n    isValidHash = (hash) => {\r\n        for(let i = 0; i < this.state.difficulty; i++) {\r\n            if(hash[i] !== \"0\") {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    mineHash = (index) => {\r\n    this.setState({isMining: true},() => {\r\n        for(let i = this.state.blocks[index].nounce; ; i++) {\r\n            let block = this.state.blocks;\r\n            let b = {\r\n                blockNo: block[index].blockNo,\r\n                timeStamp: block[index].timeStamp,\r\n                nounce: i,\r\n                prevHash: this.state.hashes[index]\r\n            }\r\n            let h = this.getHash(b);\r\n            if(this.isValidHash(h)) {\r\n                let hash = this.state.hashes;\r\n                let b = this.state.blocks;\r\n                hash[index + 1] = h;\r\n                b[index].nounce = i;\r\n                this.setState({blocks: b});\r\n                this.setState({hashes: hash});\r\n                this.setState({isMining: false});\r\n                if(index < this.state.blocks.length - 1 )\r\n                    this.calculateHash(index + 1);\r\n                break;\r\n            }\r\n        }\r\n    });\r\n    }\r\n\r\n    changeBlockNo = (v,index) => {\r\n        let a = this.state.blocks;\r\n        a[index].blockNo = v;\r\n        this.setState({blocks: a},() => {\r\n            this.calculateHash(index);    \r\n        });\r\n    }\r\n    changeNounce = (v,index) => {\r\n        let a = this.state.blocks;\r\n        a[index].nounce = v;\r\n        this.setState({blocks: a},() => {\r\n            this.calculateHash(index);\r\n        });\r\n    }\r\n    \r\n    renderCards = () => {\r\n        //mine button style must be changed , when it's mining!!!\r\n        const Blocks = this.state.blocks.map((b,i) => {\r\n            let hashClass;\r\n            if(this.state.hashes.length > 1 && this.isValidHash(this.state.hashes[i + 1])) {\r\n                hashClass = \"validHashes\";\r\n            }\r\n            else {\r\n                hashClass = \"inValidHashes\";\r\n            }\r\n            //<input type = \"text\" defaultValue = {this.state.hashes[i]} onChange = {(e) => {this.changePrev(e.target.value,i);}}  />\r\n            return (\r\n                <div key = {uniqid()} className = \"BlockCard-div\" >\r\n                    <table className = \"table\">\r\n                        <tbody className = \"table-body\">\r\n                            <tr className = \"table-row\">\r\n                                <td className = \"table-text\">Block No:</td>\r\n                                <td className = \"table-input\">\r\n                                    <input type = \"number\" className = \"BlockNo\" defaultValue = {b.blockNo} onChange = {(e) => { this.changeBlockNo(e.target.value,i);} } />\r\n                                </td>\r\n                            </tr>\r\n                            <tr className = \"table-row\">\r\n                                <td>Nounce:</td>\r\n                                <td><input type = \"number\" className = \"Nounce\" defaultValue = {b.nounce} onChange = {(e) => {this.changeNounce(e.target.value,i);}} /></td>\r\n                            </tr>\r\n                            <tr className = \"table-row\">\r\n                                <td>Prev:</td>\r\n                                <td>\r\n                                    <div className = \"prev-hash\">\r\n                                        <HorizontalScrollable>\r\n                                            {this.state.hashes[i]}\r\n                                        </HorizontalScrollable>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr className = \"table-row\">\r\n                                <td>Hash:</td>\r\n                                <td>\r\n                                    <div className = {hashClass} >\r\n                                        <HorizontalScrollable>\r\n                                            {this.state.hashes[i + 1]}\r\n                                        </HorizontalScrollable>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr className = \"table-row\">\r\n                                <td className = \"button-row\">\r\n                                    <button className = \"mine-button\" onClick = {() => {this.mineHash(i);}}>\r\n                                        {\"Mine\"}\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n            );    \r\n        })\r\n        return Blocks;\r\n    }\r\n\r\n    showBackward = (arr) => {\r\n        //reverse arr, \r\n        for(let i = 0,j = arr.length - 1; i < arr.length/2 && j !== i; i++, j--) {\r\n            let b = arr[i];\r\n            arr[i] = arr[j];\r\n            arr[j] = b;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    makeNewBlock = () => {\r\n        let obj = {\r\n            blockNo: this.state.blocks[this.state.blocks.length - 1].blockNo + 1,\r\n            nounce: 0,\r\n            timeStamp: new Date()\r\n        }\r\n        let obj2 = {\r\n            ...obj,\r\n            prevHash: this.state.hashes[this.state.hashes.length - 1]\r\n        }\r\n        this.setState({blocks: this.state.blocks.concat(obj), hashes: this.state.hashes.concat(this.getHash(obj2))});\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        for(let i = 0; i< this.state.blocks.length; i++) {\r\n            this.mineHash(i);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button id = \"new-block-button\" onClick = {() => {this.makeNewBlock()}}>New</button>\r\n                {this.showBackward(this.renderCards())}\r\n            </div>    \r\n        );\r\n    }\r\n}\r\nexport default BlockChain;","import React from 'react';\r\nimport Heading from '../heading/heading';\r\nimport BlockChain from '../blockChain/blockChain';\r\nimport {VerticalScrollable} from '../scroll/scroll';\r\nimport './homepage.css';\r\n\r\n\r\n\r\nclass Homepage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id = \"HomePage-div\">\r\n                <header id = \"main-header\">\r\n                    <Heading/>\r\n                </header>\r\n                <div id = \"BlockChain-div\">\r\n                    <VerticalScrollable>\r\n                        <div className = \"block-chain-vertical-scroll\">\r\n                            <BlockChain />\r\n                        </div>  \r\n                    </VerticalScrollable>\r\n                </div>\r\n                <footer>\r\n                    Developed by: Muhammad Abdullah\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Homepage;","\nimport './App.css';\n\nimport Homepage from './homepage/homepage';\n\nfunction App() {\n  return (\n    <div className= \"App\">\n      <Homepage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorker.register();"],"sourceRoot":""}